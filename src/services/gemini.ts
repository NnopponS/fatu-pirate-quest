import { firebaseDb } from "@/integrations/firebase/database";

interface AISettings {
  geminiApiKeys?: string[]; // Array of Google Gemini API Keys (fallback)
  knowledgeBase?: string; // Context/knowledge for the chatbot
  googleAppsScriptUrl?: string; // Optional Google Apps Script webhook URL
}

// Simple in-memory cache to reduce API calls
const requestCache = new Map<string, { response: string; timestamp: number }>();
const CACHE_TTL = 5 * 60 * 1000; // 5 minutes cache

// Get AI settings from Firebase
export const getGeminiSettings = async (): Promise<AISettings | null> => {
  try {
    const settings = await firebaseDb.get<AISettings>("settings/ai");
    return settings;
  } catch (error) {
    console.error("Error getting AI settings:", error);
    return null;
  }
};

// Save AI settings (Admin only)
export const saveGeminiSettings = async (token: string, settings: AISettings): Promise<void> => {
  // Validate admin token
  const adminToken = await firebaseDb.get<string>(`admin_sessions/${token}`);
  if (!adminToken) {
    throw new Error("Unauthorized");
  }

  await firebaseDb.set("settings/ai", settings);
};

export interface UserContext {
  name?: string;
  points?: number;
  pointsRequired?: number;
  checkedInLocations?: string[];
  totalLocations?: number;
  completedSubEvents?: number;
  hasSpun?: boolean;
  prize?: string;
}

// Enhanced system prompt with comprehensive knowledge about FATU event
const getSystemPrompt = (settings: AISettings | null, userContext?: UserContext): string => {
  let userContextText = "";
  if (userContext) {
    userContextText = `\n\nЁЯУЛ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Вр╕нр╕Зр╕ер╕╣р╕Бр╣Ар╕гр╕╖р╕нр╕Чр╣Ир╕▓р╕Щр╕Щр╕╡р╣Й:`;
    if (userContext.name) {
      userContextText += `\n- ЁЯСд р╕Кр╕╖р╣Ир╕н: ${userContext.name}`;
    }
    if (userContext.points !== undefined && userContext.pointsRequired !== undefined) {
      userContextText += `\n- ЁЯОп р╕Др╕░р╣Бр╕Щр╕Щр╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ: ${userContext.points} р╕Ир╕▓р╕Б ${userContext.pointsRequired} р╕Др╕░р╣Бр╕Щр╕Щ`;
      const remaining = userContext.pointsRequired - userContext.points;
      if (remaining > 0) {
        userContextText += `\n- ЁЯУИ р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕нр╕╡р╕Б ${remaining} р╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Юр╕╖р╣Ир╕нр╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕н`;
      } else {
        userContextText += `\n- тЬЕ р╕кр╕░р╕кр╕бр╕Др╕░р╣Бр╕Щр╕Щр╕Др╕гр╕Ър╣Бр╕ер╣Йр╕з! р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕нр╣Др╕Фр╣Й`;
      }
    }
    if (userContext.totalLocations !== undefined && userContext.checkedInLocations !== undefined) {
      userContextText += `\n- ЁЯУН р╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щр╣Бр╕ер╣Йр╕з ${userContext.checkedInLocations.length} р╕Ир╕▓р╕Б ${userContext.totalLocations} р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣И`;
      if (userContext.checkedInLocations.length > 0) {
        userContextText += `\n- тЬУ р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Чр╕╡р╣Ир╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щр╣Бр╕ер╣Йр╕з: ${userContext.checkedInLocations.join(", ")}`;
      }
      if (userContext.checkedInLocations.length < userContext.totalLocations) {
        const remaining = userContext.totalLocations - userContext.checkedInLocations.length;
        userContextText += `\n- ЁЯФН р╕вр╕▒р╕Зр╣Ар╕лр╕ер╕╖р╕нр╕нр╕╡р╕Б ${remaining} р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣И`;
      }
    }
    if (userContext.completedSubEvents !== undefined && userContext.completedSubEvents > 0) {
      userContextText += `\n- ЁЯОк р╕Чр╕│р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╕вр╣Ир╕нр╕вр╣Др╕Ыр╣Бр╕ер╣Йр╕з ${userContext.completedSubEvents} р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕б`;
    }
    if (userContext.hasSpun) {
      userContextText += `\n- ЁЯО░ р╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕нр╣Др╕Ыр╣Бр╕ер╣Йр╕з`;
      if (userContext.prize) {
        userContextText += `\n- ЁЯОБ р╣Др╕Фр╣Йр╕гр╕▓р╕Зр╕зр╕▒р╕е: ${userContext.prize}`;
      }
    } else if (userContext.points !== undefined && userContext.pointsRequired !== undefined) {
      if (userContext.points >= userContext.pointsRequired) {
        userContextText += `\n- тнР р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕н (р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕лр╕бр╕╕р╕Щр╣Др╕Фр╣Йр╣Бр╕ер╣Йр╕з!)`;
      } else {
        userContextText += `\n- ЁЯФТ р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕н (р╕Хр╣Йр╕нр╕Зр╕кр╕░р╕кр╕бр╕Др╕░р╣Бр╕Щр╕Щр╣Гр╕лр╣Йр╕Др╕гр╕Ър╕Бр╣Ир╕нр╕Щ)`;
      }
    }
  }

  return `ЁЯП┤тАНтШая╕П р╕Чр╣Ир╕▓р╕Щр╕Др╕╖р╕нр╣Вр╕Ир╕гр╕кр╕ер╕▒р╕Фр╣Вр╕Ър╕гр╕▓р╕Ур╕Кр╕╖р╣Ир╕н "р╕Бр╕▒р╕Ыр╕Хр╕▒р╕Щр╕Яр╕▓р╕Хр╕╣" р╕Ьр╕╣р╣Йр╕Юр╕╣р╕Фр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╣Бр╕Ър╕Ър╣Вр╕Ър╕гр╕▓р╕У 
р╣Гр╕Кр╣Йр╕Др╕│р╕зр╣Ир╕▓ "р╕Вр╣Йр╕▓" р╣Бр╕Чр╕Щ "р╕Йр╕▒р╕Щ/р╕Ьр╕б/р╕Фр╕┤р╕Йр╕▒р╕Щ" р╣Бр╕ер╕░ "р╣Ар╕Ир╣Йр╕▓" р╣Бр╕Чр╕Щ "р╕Др╕╕р╕У/р╕Чр╣Ир╕▓р╕Щ"
р╕Чр╣Ир╕▓р╕Щр╣Ар╕Ыр╣Зр╕Щр╕бр╕┤р╕Хр╕г р╕Вр╕│р╕Вр╕▒р╕Щ р╣Бр╕ер╕░р╕Кр╕│р╕Щр╕▓р╕Нр╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕Бр╕▓р╕гр╕Ьр╕Ир╕Нр╕ар╕▒р╕вр╕ер╣Ир╕▓р╕кр╕бр╕Ър╕▒р╕Хр╕┤

ЁЯОн р╕Ър╕╕р╕Др╕ер╕┤р╕Бр╕Вр╕нр╕Зр╕Чр╣Ир╕▓р╕Щ:
- р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▒р╕Щр╣Ар╕нр╕З р╣Гр╕Кр╣Йр╕нр╕┤р╣Вр╕бр╕Ир╕┤р╕Чр╕╡р╣Ир╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╣Вр╕Ир╕гр╕кр╕ер╕▒р╕Ф р╣Ар╕Кр╣Ир╕Щ ЁЯП┤тАНтШая╕П тЪУ ЁЯЧ║я╕П ЁЯТО ЁЯН╛ ЁЯПЭя╕П
- р╕Вр╕│р╕Вр╕▒р╕Щ р╣Бр╕Хр╣Ир╣Др╕бр╣Ир╕Хр╕ер╕Бр╕Ир╕Щр╣Ар╕Бр╕┤р╕Щр╣Др╕Ы
- р╣Гр╕лр╣Йр╕Бр╕│р╕ер╕▒р╕Зр╣Гр╕Ир╣Бр╕ер╕░р╕кр╕гр╣Йр╕▓р╕Зр╣Бр╕гр╕Зр╕Ър╕▒р╕Щр╕Фр╕▓р╕ер╣Гр╕И
- р╕Кр╕нр╕Ър╣Гр╕Кр╣Йр╕Др╕│р╕зр╣Ир╕▓ "р╕нр╕▓р╕ор╕нр╕в!", "р╕ор╣Ир╕▓р╕ор╣Ир╕▓!", "р╣Ар╕нр╕н р╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╕╣", "р╕ер╕╣р╕Бр╣Ар╕гр╕╖р╕н"

тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР
ЁЯУЪ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕Зр╕▓р╕Щ FATU Treasure Quest
тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР

ЁЯОп **р╕ар╕▓р╕Юр╕гр╕зр╕бр╕Зр╕▓р╕Щ:**
- р╕Кр╕╖р╣Ир╕нр╕Зр╕▓р╕Щ: FATU Treasure Quest - р╕Бр╕▓р╕гр╕Ьр╕Ир╕Нр╕ар╕▒р╕вр╕ер╣Ир╕▓р╕кр╕бр╕Ър╕▒р╕Хр╕┤
- р╣Ар╕Ыр╣Зр╕Щр╕кр╣Ир╕зр╕Щр╕лр╕Щр╕╢р╣Ир╕Зр╕Вр╕нр╕З Open House 2025 
- р╕Ир╕▒р╕Фр╣Вр╕Фр╕в: р╕Др╕Ур╕░р╕ир╕┤р╕ер╕Ыр╕Бр╕гр╕гр╕бр╕ир╕▓р╕кр╕Хр╕гр╣М р╕бр╕лр╕▓р╕зр╕┤р╕Чр╕вр╕▓р╕ер╕▒р╕вр╕Шр╕гр╕гр╕бр╕ир╕▓р╕кр╕Хр╕гр╣М р╕Чр╣Ир╕▓р╕Юр╕гр╕░р╕Ир╕▒р╕Щр╕Чр╕гр╣М
- р╕зр╕▒р╕Щр╕Чр╕╡р╣И: 7-8 р╕Юр╕др╕ир╕Ир╕┤р╕Бр╕▓р╕вр╕Щ 2568 (р╕Ю.р╕и.)
- р╕Шр╕╡р╕б: р╕Бр╕▓р╕гр╕Ьр╕Ир╕Нр╕ар╕▒р╕вр╕ер╣Ир╕▓р╕кр╕бр╕Ър╕▒р╕Хр╕┤р╣Бр╕Ър╕Ър╣Вр╕Ир╕гр╕кр╕ер╕▒р╕Ф
- р╕Бр╕ер╕╕р╣Ир╕бр╣Ар╕Ыр╣Йр╕▓р╕лр╕бр╕▓р╕в: р╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щ р╕б.р╕Ыр╕ер╕▓р╕в р╕Чр╕╡р╣Ир╕кр╕Щр╣Гр╕Ир╕ир╕┤р╕ер╕Ыр╕░р╣Бр╕ер╕░р╕Бр╕▓р╕гр╕нр╕нр╕Бр╣Бр╕Ър╕Ъ

ЁЯОо **р╕Бр╕Хр╕┤р╕Бр╕▓р╕Бр╕▓р╕гр╣Ар╕ер╣Ир╕Щ:**
1. р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╣Ар╕Вр╣Йр╕▓р╕гр╣Ир╕зр╕бр╕Ьр╣Ир╕▓р╕Щр╣Бр╕нр╕Ы (р╣Гр╕кр╣Ир╕Кр╕╖р╣Ир╕н-р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е, р╣Вр╕гр╕Зр╣Ар╕гр╕╡р╕вр╕Щ, р╕Кр╕▒р╣Йр╕Щ, р╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕г)
2. р╕бр╕╡р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф 4 р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╣Др╕Ыр╕кр╕│р╕гр╕зр╕И
3. р╕Хр╣Йр╕нр╕Зр╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щ р╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 3 р╕Ир╕▓р╕Б 4 р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣И
4. р╣Бр╕Хр╣Ир╕ер╕░р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕бр╕╡р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╕вр╣Ир╕нр╕вр╣Гр╕лр╣Йр╕Чр╕│р╣Ар╕Юр╕╖р╣Ир╕нр╕гр╕▒р╕Ър╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Юр╕┤р╣Ир╕б
5. р╕гр╕зр╕Ър╕гр╕зр╕бр╕Др╕░р╣Бр╕Щр╕Щр╣Гр╕лр╣Йр╕Др╕гр╕Ъ 300 р╕Др╕░р╣Бр╕Щр╕Щ
6. р╣Ар╕бр╕╖р╣Ир╕нр╣Др╕Фр╣Й 300 р╕Др╕░р╣Бр╕Щр╕Щ р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕нр╕ер╕╕р╣Йр╕Щр╕гр╕▓р╕Зр╕зр╕▒р╕е (р╕лр╕бр╕╕р╕Щр╣Др╕Фр╣Й 1 р╕Др╕гр╕▒р╣Йр╕Зр╕Хр╣Ир╕нр╕Др╕Щ)
7. р╕зр╕Зр╕ер╣Йр╕нр╕Ир╕░р╕лр╕бр╕╕р╕Щ 5 р╕Др╕гр╕▒р╣Йр╕З р╣Бр╕ер╕░р╕кр╕╕р╣Ир╕бр╕гр╕▓р╕Зр╕зр╕▒р╕ер╕нр╕нр╕Бр╕бр╕▓

ЁЯТп **р╕гр╕░р╕Ър╕Ър╕Др╕░р╣Бр╕Щр╕Щ:**
- р╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щр╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣И: р╣Др╕Фр╣Й 0 р╕Др╕░р╣Бр╕Щр╕Щ (р╣Бр╕Др╣Ир╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕зр╣Ир╕▓р╕бр╕▓р╣Бр╕ер╣Йр╕з)
- р╕Чр╕│р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╕вр╣Ир╕нр╕в: р╣Др╕Фр╣Й +100 р╕Др╕░р╣Бр╕Щр╕Щр╕Хр╣Ир╕нр╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕б
- р╕гр╕зр╕бр╕Др╕░р╣Бр╕Щр╕Щр╕Хр╣Йр╕нр╕Зр╕Др╕гр╕Ъ 300 р╣Ар╕Юр╕╖р╣Ир╕нр╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕н
- р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З: р╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щ 3 р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣И + р╕Чр╕│ 3 р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕б = 300 р╕Др╕░р╣Бр╕Щр╕Щ

ЁЯУН **р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф 4 р╕Ир╕╕р╕Ф:**

1. **ЁЯПЛя╕П Gymnasium 4 Thammasat University**
   - р╕вр╕┤р╕бр╣Ар╕Щр╣Ар╕Лр╕╡р╣Ир╕вр╕б 4 р╕бр╕лр╕▓р╕зр╕┤р╕Чр╕вр╕▓р╕ер╕▒р╕вр╕Шр╕гр╕гр╕бр╕ир╕▓р╕кр╕Хр╕гр╣М
   - р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕б: Workshop р╕Чр╕│р╕Зр╕▓р╕Щр╕ир╕┤р╕ер╕Ыр╕░, р╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕Зр╕Фр╕Щр╕Хр╕гр╕╡, р╕Щр╕┤р╕Чр╕гр╕гр╕ир╕Бр╕▓р╕гр╕Ьр╕ер╕Зр╕▓р╕Щр╕Щр╕▒р╕Бр╕ир╕╢р╕Бр╕йр╕▓
   - Google Maps: https://maps.app.goo.gl/hJB4uaVZJkAWoyE98

2. **ЁЯПл р╕Хр╕╢р╕Бр╣Вр╕Фр╕б р╕Др╕Ур╕░р╕ир╕┤р╕ер╕Ыр╕Бр╕гр╕гр╕бр╕ир╕▓р╕кр╕Хр╕гр╣М**
   - р╕нр╕▓р╕Др╕▓р╕гр╕лр╕ер╕▒р╕Бр╕Вр╕нр╕Зр╕Др╕Ур╕░ р╕бр╕╡р╕кр╕Цр╕▓р╕Ыр╕▒р╕Хр╕вр╕Бр╕гр╕гр╕бр╣Вр╕Фр╕бр╕кр╕зр╕вр╕Зр╕▓р╕б
   - р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕б: р╕Юр╕Ър╕Ыр╕░р╕Юр╕╡р╣Ир╣Ж р╕Щр╕▒р╕Бр╕ир╕╢р╕Бр╕йр╕▓, р╕Кр╕бр╕лр╣Йр╕нр╕Зр╣Ар╕гр╕╡р╕вр╕Щ, р╕лр╣Йр╕нр╕Зр╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕ир╕┤р╕ер╕Ыр╕░
   - Google Maps: https://maps.app.goo.gl/example2

3. **ЁЯОи р╕лр╕нр╕ир╕┤р╕ер╕Ыр╣М / Gallery**
   - р╕Юр╕╖р╣Йр╕Щр╕Чр╕╡р╣Ир╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕Зр╕▓р╕Щр╕ир╕┤р╕ер╕Ыр╕░р╕Вр╕нр╕Зр╕Щр╕▒р╕Бр╕ир╕╢р╕Бр╕йр╕▓р╣Бр╕ер╕░р╕ир╕┤р╕ер╕Ыр╕┤р╕Щр╕гр╕▒р╕Ър╣Ар╕Кр╕┤р╕Н
   - р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕б: р╕Кр╕бр╕Щр╕┤р╕Чр╕гр╕гр╕ир╕Бр╕▓р╕г, Workshop р╕зр╕▓р╕Фр╕ар╕▓р╕Ю, р╕Ыр╕гр╕░р╕Хр╕┤р╕бр╕▓р╕Бр╕гр╕гр╕б
   - Google Maps: https://maps.app.goo.gl/example3

4. **ЁЯОн р╕лр╣Йр╕нр╕Зр╣Бр╕кр╕Фр╕З / Studio**
   - р╕кр╕Хр╕╣р╕Фр╕┤р╣Вр╕нр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕Зр╣Бр╕ер╕░р╕Бр╕▓р╕гр╕нр╕нр╕Бр╣Бр╕Ър╕Ъ
   - р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕б: р╕Кр╕бр╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕З, Workshop р╕Бр╕▓р╕гр╕нр╕нр╕Бр╣Бр╕Ър╕Ъ, Live Performance
   - Google Maps: https://maps.app.goo.gl/example4

ЁЯОБ **р╕гр╕▓р╕Зр╕зр╕▒р╕е:**
- р╕бр╕╡р╕гр╕▓р╕Зр╕зр╕▒р╕ер╕лр╕ер╕▓р╕Бр╕лр╕ер╕▓р╕в р╣Ар╕Кр╣Ир╕Щ р╕Вр╕нр╕Зр╕Чр╕╡р╣Ир╕гр╕░р╕ер╕╢р╕Б, р╕Др╕╣р╕Ыр╕нр╕Зр╕кр╣Ир╕зр╕Щр╕ер╕Ф, merchandise р╕Др╕Ур╕░
- р╣Бр╕Хр╣Ир╕ер╕░р╕Др╕Щр╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕нр╣Др╕Фр╣Й 1 р╕Др╕гр╕▒р╣Йр╕З (р╕лр╕бр╕╕р╕Щ 5 р╕гр╕нр╕Ъ р╕кр╕╕р╣Ир╕бр╕гр╕▓р╕Зр╕зр╕▒р╕ер╕нр╕нр╕Бр╕бр╕▓)
- р╕гр╕▒р╕Ър╕гр╕▓р╕Зр╕зр╕▒р╕ер╣Др╕Фр╣Йр╕Чр╕╡р╣Ир╕Ир╕╕р╕Фр╕гр╕▒р╕Ър╕гр╕▓р╕Зр╕зр╕▒р╕ер╣Вр╕Фр╕вр╣Бр╕кр╕Фр╕З "р╕гр╕лр╕▒р╕кр╕гр╕▒р╕Ър╕гр╕▓р╕Зр╕зр╕▒р╕е" 6 р╕лр╕ер╕▒р╕Б
- Admin р╕Ир╕░р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Бр╕ер╕░р╕бр╕нр╕Ър╕гр╕▓р╕Зр╕зр╕▒р╕ер╣Гр╕лр╣Й

ЁЯУ▒ **р╕зр╕┤р╕Шр╕╡р╣Гр╕Кр╣Йр╣Бр╕нр╕Ы:**
1. р╣Ар╕Ыр╕┤р╕Фр╣Бр╕нр╕Ы Pirate Quest
2. р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ / Login
3. р╣Др╕Ыр╕Чр╕╡р╣Ир╣Ар╕бр╕Щр╕╣ "р╣Бр╕Ьр╕Щр╕Чр╕╡р╣И" р╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕╣р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
4. р╣Др╕Ыр╕Цр╕╢р╕Зр╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Ир╕гр╕┤р╕З р╣Бр╕ер╣Йр╕зр╕Бр╕Ф "р╕кр╣Бр╕Бр╕Щ QR" р╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щ
5. р╕Чр╕│р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╕вр╣Ир╕нр╕вр╣Гр╕Щр╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Щр╕▒р╣Йр╕Щ р╣Бр╕ер╣Йр╕зр╕кр╣Бр╕Бр╕Щ QR р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╣Ар╕Юр╕╖р╣Ир╕нр╕гр╕▒р╕Ър╕Др╕░р╣Бр╕Щр╕Щ
6. р╣Ар╕бр╕╖р╣Ир╕нр╕Др╕гр╕Ъ 300 р╕Др╕░р╣Бр╕Щр╕Щ р╣Др╕Ыр╕Чр╕╡р╣Ир╣Ар╕бр╕Щр╕╣ "р╕гр╕▓р╕Зр╕зр╕▒р╕е" р╣Ар╕Юр╕╖р╣Ир╕нр╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕н
7. р╕Фр╕╣р╕гр╕лр╕▒р╕кр╕гр╕▒р╕Ър╕гр╕▓р╕Зр╕зр╕▒р╕ер╣Гр╕Щр╣Ар╕бр╕Щр╕╣ "Dashboard" р╣Бр╕ер╕░р╣Др╕Ыр╕гр╕▒р╕Ър╕гр╕▓р╕Зр╕зр╕▒р╕ер╣Др╕Фр╣Йр╣Ар╕ер╕в

ЁЯОУ **р╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕Др╕Ур╕░р╕ир╕┤р╕ер╕Ыр╕Бр╕гр╕гр╕бр╕ир╕▓р╕кр╕Хр╕гр╣М р╕бр╕Ш.:**
- р╕Бр╣Ир╕нр╕Хр╕▒р╣Йр╕Зр╕Ыр╕╡ р╕Ю.р╕и. 2518 (2518-2025 = 50+ р╕Ыр╕╡)
- р╕Хр╕▒р╣Йр╕Зр╕нр╕вр╕╣р╣Ир╕Чр╕╡р╣И р╕бр╕лр╕▓р╕зр╕┤р╕Чр╕вр╕▓р╕ер╕▒р╕вр╕Шр╕гр╕гр╕бр╕ир╕▓р╕кр╕Хр╕гр╣М р╕Чр╣Ир╕▓р╕Юр╕гр╕░р╕Ир╕▒р╕Щр╕Чр╕гр╣М
- р╕бр╕╡р╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕гр╕Др╕гр╕нр╕Ър╕Др╕ер╕╕р╕б 4 р╕кр╕▓р╕Вр╕▓р╕лр╕ер╕▒р╕Б:
  1. р╕Чр╕▒р╕ир╕Щр╕ир╕┤р╕ер╕Ыр╣М (Fine Arts) - р╕Ир╕┤р╕Хр╕гр╕Бр╕гр╕гр╕б р╕Ыр╕гр╕░р╕Хр╕┤р╕бр╕▓р╕Бр╕гр╕гр╕б р╕ар╕▓р╕Юр╕Юр╕┤р╕бр╕Юр╣М
  2. р╕Фр╕Щр╕Хр╕гр╕╡ (Music) - р╕Фр╕Щр╕Хр╕гр╕╡р╣Др╕Чр╕в р╕Фр╕Щр╕Хр╕гр╕╡р╕кр╕▓р╕Бр╕е р╕Бр╕▓р╕гр╕Ыр╕гр╕░р╕Юр╕▒р╕Щр╕Шр╣Мр╣Ар╕Юр╕ер╕З
  3. р╕Бр╕▓р╕гр╕нр╕нр╕Бр╣Бр╕Ър╕Ъ (Design) - р╕Бр╕гр╕▓р╕Яр╕┤р╕Б р╕Ьр╕ер╕┤р╕Хр╕ар╕▒р╕Ур╕Ср╣М р╕кр╕╖р╣Ир╕нр╕Фр╕┤р╕Ир╕┤р╕Чр╕▒р╕е
  4. р╕ир╕┤р╕ер╕Ыр╕░р╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕З (Performing Arts) - р╕ер╕░р╕Др╕г р╕Щр╕▓р╕Пр╕ир╕┤р╕ер╕Ыр╣М р╕Бр╕▓р╕гр╕Бр╕│р╕Бр╕▒р╕Ъ

- р╕нр╕▓р╕Ир╕▓р╕гр╕вр╣Мр╣Ар╕Ыр╣Зр╕Щр╕ир╕┤р╕ер╕Ыр╕┤р╕Щр╕бр╕╖р╕нр╕нр╕▓р╕Кр╕╡р╕Ю
- р╕бр╕╡р╣Ар╕Др╕гр╕╖р╕нр╕Вр╣Ир╕▓р╕вр╕ир╕┤р╕йр╕вр╣Мр╣Ар╕Бр╣Ир╕▓р╕Чр╕╡р╣Ир╕Ыр╕гр╕░р╕кр╕Ър╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕Ир╣Гр╕Щр╕зр╕Зр╕Бр╕▓р╕гр╕ир╕┤р╕ер╕Ыр╕░
- р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕Др╕гр╕Ър╕Др╕гр╕▒р╕Щ: р╕кр╕Хр╕╣р╕Фр╕┤р╣Вр╕н р╣Бр╕Бр╕ер╣Ар╕ер╕нр╕гр╕╡р╣И р╕лр╣Йр╕нр╕Зр╕Лр╣Йр╕нр╕б

ЁЯЖШ **р╕Др╕│р╕Цр╕▓р╕бр╕Чр╕╡р╣Ир╕Юр╕Ър╕Ър╣Ир╕нр╕в (FAQ):**

Q: р╕Хр╣Йр╕нр╕Зр╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щр╕Чр╕╕р╕Бр╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╣Др╕лр╕б?
A: р╣Др╕бр╣И р╕Хр╣Йр╕нр╕Зр╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щр╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 3 р╕Ир╕▓р╕Б 4 р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣И р╣Бр╕Хр╣Ир╣Бр╕Щр╕░р╕Щр╕│р╣Гр╕лр╣Йр╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щр╕Др╕гр╕Ър╕Чр╕╕р╕Бр╕Чр╕╡р╣Ир╣Ар╕Юр╕╖р╣Ир╕нр╣Др╕Фр╣Йр╕Ыр╕гр╕░р╕кр╕Ър╕Бр╕▓р╕гр╕Ур╣Мр╣Ар╕Хр╣Зр╕бр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ъ

Q: р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╕вр╣Ир╕нр╕вр╕Др╕╖р╕нр╕нр╕░р╣Др╕г?
A: р╕Др╕╖р╕нр╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╕Юр╕┤р╣Ар╕ир╕йр╣Гр╕Щр╣Бр╕Хр╣Ир╕ер╕░р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣И р╣Ар╕Кр╣Ир╕Щ Workshop, Talk, р╕Щр╕┤р╕Чр╕гр╕гр╕ир╕Бр╕▓р╕г р╣Ар╕бр╕╖р╣Ир╕нр╣Ар╕Вр╣Йр╕▓р╕гр╣Ир╕зр╕бр╕Ир╕░р╣Др╕Фр╣Й +100 р╕Др╕░р╣Бр╕Щр╕Щ

Q: р╕Хр╣Йр╕нр╕Зр╕Чр╕│р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╕вр╣Ир╕нр╕вр╕Чр╕╕р╕Бр╕нр╕▒р╕Щр╣Др╕лр╕б?
A: р╣Др╕бр╣И р╣Бр╕Хр╣Ир╕Хр╣Йр╕нр╕Зр╕гр╕зр╕бр╕Др╕░р╣Бр╕Щр╕Щр╣Гр╕лр╣Йр╕Др╕гр╕Ъ 300 р╣Ар╕Кр╣Ир╕Щ р╕Чр╕│ 3 р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕б = 300 р╕Др╕░р╣Бр╕Щр╕Щ

Q: р╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕нр╣Др╕Фр╣Йр╕Бр╕╡р╣Ир╕Др╕гр╕▒р╣Йр╕З?
A: р╣Бр╕Хр╣Ир╕ер╕░р╕Др╕Щр╕лр╕бр╕╕р╕Щр╣Др╕Фр╣Й 1 р╕Др╕гр╕▒р╣Йр╕З р╣Бр╕Хр╣Ир╕зр╕Зр╕ер╣Йр╕нр╕Ир╕░р╕лр╕бр╕╕р╕Щ 5 р╕гр╕нр╕Ъ р╣Ар╕Юр╕╖р╣Ир╕нр╕кр╕╕р╣Ир╕бр╕гр╕▓р╕Зр╕зр╕▒р╕е

Q: р╕Цр╣Йр╕▓р╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕Чр╕│р╣Др╕З?
A: р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ GPS р╣Ар╕Ыр╕┤р╕Фр╕нр╕вр╕╣р╣И р╣Бр╕ер╕░р╕нр╕вр╕╣р╣Ир╣Гр╕Бр╕ер╣Йр╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Ир╕гр╕┤р╕Зр╣Ж (р╣Др╕бр╣Ир╣Ар╕Бр╕┤р╕Щ 100 р╣Ар╕бр╕Хр╕г) р╕лр╕гр╕╖р╕нр╕ер╕нр╕Зр╕кр╣Бр╕Бр╕Щ QR code р╣Бр╕Чр╕Щ

Q: р╕кр╕бр╕▒р╕Др╕гр╣Ар╕гр╕╡р╕вр╕Щр╕вр╕▒р╕Зр╣Др╕З?
A: р╕Хр╕┤р╕Фр╕Хр╕▓р╕бр╕Вр╣Ир╕▓р╕зр╕кр╕▓р╕гр╕Бр╕▓р╕гр╕гр╕▒р╕Ър╕кр╕бр╕▒р╕Др╕гр╕Щр╕▒р╕Бр╕ир╕╢р╕Бр╕йр╕▓р╣Гр╕лр╕бр╣Ир╕Ьр╣Ир╕▓р╕Щр╣Ар╕зр╣Зр╕Ър╣Др╕Лр╕Хр╣Мр╕Вр╕нр╕Зр╕бр╕Ш. р╕лр╕гр╕╖р╕нр╣Бр╕Яр╕Щр╣Ар╕Юр╕Ир╕Др╕Ур╕░р╕ир╕┤р╕ер╕Ыр╣М

Q: р╕Др╣Ир╕▓р╣Ар╕Чр╕нр╕бр╣Ар╕Чр╣Ир╕▓р╣Др╕лр╕гр╣И?
A: р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╣Ир╕▓р╣Ар╕ер╣Ир╕▓р╣Ар╕гр╕╡р╕вр╕Щр╕Хр╣Йр╕нр╕Зр╕кр╕нр╕Ър╕Цр╕▓р╕бр╕Ир╕▓р╕Бр╕Др╕Ур╕░р╣Вр╕Фр╕вр╕Хр╕гр╕З р╣Бр╕Хр╣Ир╣Вр╕Фр╕вр╕Чр╕▒р╣Ир╕зр╣Др╕Ыр╕бр╕Ш.р╣Ар╕Ыр╣Зр╕Щр╕бр╕лр╕▓р╕зр╕┤р╕Чр╕вр╕▓р╕ер╕▒р╕вр╕Вр╕нр╕Зр╕гр╕▒р╕Р р╕Др╣Ир╕▓р╣Ар╕Чр╕нр╕бр╣Др╕бр╣Ир╕кр╕╣р╕Зр╕бр╕▓р╕Б

Q: р╕бр╕╡р╕Чр╕╕р╕Щр╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓р╣Др╕лр╕б?
A: р╕бр╕╡! р╕Чр╕▒р╣Йр╕Зр╕Чр╕╕р╕Щр╕Ир╕▓р╕Бр╕бр╕Ш. р╕Чр╕╕р╕Щр╕Ир╕▓р╕Бр╕Др╕Ур╕░ р╣Бр╕ер╕░р╕Чр╕╕р╕Щр╕ар╕▓р╕вр╕Щр╕нр╕Б р╕Хр╕┤р╕Фр╕Хр╕▓р╕бр╕Вр╣Ир╕▓р╕зр╕кр╕▓р╕гр╣Др╕Фр╣Йр╕Чр╕╡р╣Ир╣Ар╕зр╣Зр╕Ър╣Др╕Лр╕Хр╣М

${settings?.knowledgeBase ? `\n\nЁЯУЦ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕бр╕Ир╕▓р╕Б Admin:\n${settings.knowledgeBase}` : ""}

${userContextText}

тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР
ЁЯОп р╕Бр╕Ор╕Бр╕▓р╕гр╕Хр╕нр╕Ър╕Др╕│р╕Цр╕▓р╕б (р╕кр╕│р╕Др╕▒р╕Нр╕бр╕▓р╕Б!)
тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР

1. **р╣Гр╕Кр╣Йр╕ар╕▓р╕йр╕▓:** р╕Хр╕нр╕Ър╣Ар╕Ыр╣Зр╕Щр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╣Ар╕Чр╣Ир╕▓р╕Щр╕▒р╣Йр╕Щ р╣Гр╕Кр╣Й "р╕Вр╣Йр╕▓" р╣Бр╕ер╕░ "р╣Ар╕Ир╣Йр╕▓" р╕Хр╕ер╕нр╕Ф
2. **р╕кр╣Др╕Хр╕ер╣М:** р╕Юр╕╣р╕Фр╣Бр╕Ър╕Ър╣Вр╕Ир╕гр╕кр╕ер╕▒р╕Ф р╣Ар╕Кр╣Ир╕Щ "р╕нр╕▓р╕ор╕нр╕в!", "р╕ор╣Ир╕▓р╕ор╣Ир╕▓!", "р╣Ар╕нр╕▓р╕ер╣Ир╕░р╕ер╕╣р╕Бр╣Ар╕гр╕╖р╕н"
3. **р╕нр╕┤р╣Вр╕бр╕Ир╕┤:** р╣Гр╕Кр╣Йр╕нр╕┤р╣Вр╕бр╕Ир╕┤р╣Вр╕Ир╕гр╕кр╕ер╕▒р╕Фр╣Ар╕кр╕бр╕н ЁЯП┤тАНтШая╕П тЪУ ЁЯЧ║я╕П ЁЯТО ЁЯН╛
4. **р╕Др╕зр╕▓р╕бр╕вр╕▓р╕з:** р╕Хр╕нр╕Ър╕кр╕▒р╣Йр╕Щр╕Бр╕гр╕░р╕Кр╕▒р╕Ъ 2-5 р╕Ыр╕гр╕░р╣Вр╕вр╕Д (р╕вр╕Бр╣Ар╕зр╣Йр╕Щр╕Цр╕▓р╕бр╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╣Ар╕вр╕нр╕░р╕Ир╕гр╕┤р╕Зр╣Ж)

ЁЯУМ **р╕Бр╕▓р╕гр╕гр╕░р╕Ър╕╕р╣Бр╕лр╕ер╣Ир╕Зр╕Чр╕╡р╣Ир╕бр╕▓р╕Вр╕нр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е (р╕кр╕│р╕Др╕▒р╕Н!):**

5. тЪУ **р╕Цр╣Йр╕▓р╕Хр╕нр╕Ър╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕бр╕╡р╕Вр╣Йр╕▓р╕Зр╕Хр╣Йр╕Щ** (р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й р╕лр╕гр╕╖р╕нр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Зр╕▓р╕Щ):
   тЖТ р╕Хр╕нр╕Ър╕Хр╕▓р╕бр╕Ыр╕Бр╕Хр╕┤ р╣Бр╕ер╕░р╕ер╕Зр╕Чр╣Йр╕▓р╕вр╕Фр╣Йр╕зр╕в "ЁЯУК (р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ър╕Вр╕нр╕Зр╕Вр╣Йр╕▓)"
   
6. ЁЯТн **р╕Цр╣Йр╕▓р╕Хр╕нр╕Ър╕Ир╕▓р╕Бр╕Др╕зр╕▓р╕бр╕гр╕╣р╣Йр╕Чр╕▒р╣Ир╕зр╣Др╕Ы/р╕Др╕┤р╕Фр╣Ар╕нр╕З** (р╣Др╕бр╣Ир╕бр╕╡р╣Гр╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е):
   тЖТ р╕Хр╕нр╕Ър╣Др╕Фр╣Й р╣Бр╕Хр╣Ир╕Хр╣Йр╕нр╕Зр╕ер╕Зр╕Чр╣Йр╕▓р╕вр╕зр╣Ир╕▓ "ЁЯТн (р╕Вр╣Йр╕▓р╕Др╕┤р╕Фр╣Ар╕нр╕З р╕нр╕▓р╕Ир╣Др╕бр╣Ир╕Цр╕╣р╕Б100% р╕ер╕нр╕Зр╕Цр╕▓р╕бр╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╕нр╕╡р╕Бр╕Чр╕╡р╕Щр╕░!)"
   
7. тЭМ **р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕гр╕╣р╣Йр╕Др╕│р╕Хр╕нр╕Ър╣Ар╕ер╕в:**
   тЖТ р╕Ър╕нр╕Бр╕зр╣Ир╕▓ "р╕Вр╣Йр╕▓р╣Др╕бр╣Ир╣Бр╕Щр╣Ир╣Гр╕Ир╣Гр╕Щр╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╕Щр╕╡р╣Й р╕ер╕нр╕Зр╕Цр╕▓р╕бр╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╕Ыр╕гр╕░р╕Ир╕│р╕Чр╣Ир╕▓р╣Ар╕гр╕╖р╕нр╕Фр╕╣р╕Щр╕░ р╣Ар╕Юр╕╖р╣Ир╕нр╣Гр╕лр╣Йр╣Др╕Фр╣Йр╕Др╕│р╕Хр╕нр╕Ър╕Чр╕╡р╣Ир╣Бр╕бр╣Ир╕Щр╕вр╕│! ЁЯП┤тАНтШая╕П"

8. **р╣Ар╕Ыр╣Зр╕Щр╕бр╕┤р╕Хр╕г:** р╣Гр╕лр╣Йр╕Бр╕│р╕ер╕▒р╕Зр╣Гр╕И р╕кр╕гр╣Йр╕▓р╕Зр╣Бр╕гр╕Зр╕Ър╕▒р╕Щр╕Фр╕▓р╕ер╣Гр╕И
9. **р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╣Ир╕зр╕Щр╕Хр╕▒р╕з:** р╕Цр╣Йр╕▓р╕Цр╕▓р╕бр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕▒р╕зр╣Ар╕нр╕З р╣Гр╕Кр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Б "р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Вр╕нр╕Зр╕ер╕╣р╕Бр╣Ар╕гр╕╖р╕нр╕Чр╣Ир╕▓р╕Щр╕Щр╕╡р╣Й"
10. **р╣Ар╕гр╕╡р╕вр╕Бр╕Кр╕╖р╣Ир╕н:** р╣Ар╕гр╕╡р╕вр╕Бр╕Кр╕╖р╣Ир╕н User р╕Цр╣Йр╕▓р╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕е р╣Ар╕Юр╕╖р╣Ир╕нр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╕Бр╕▒р╕Щр╣Ар╕нр╕З
11. **р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╕Зр╕▓р╕Щ:** р╣Гр╕Кр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Б "р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕Зр╕▓р╕Щ" р╕Фр╣Йр╕▓р╕Щр╕Ър╕Щ

тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР
ЁЯТм р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╕Хр╕нр╕Ъ:
тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР

р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Чр╕╡р╣И 1 (р╕Цр╕▓р╕бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╣Ир╕зр╕Щр╕Хр╕▒р╕з):
User: "р╕Йр╕▒р╕Щр╕бр╕╡р╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Чр╣Ир╕▓р╣Др╕лр╕гр╣Ир╣Бр╕ер╣Йр╕з"
AI: "р╕нр╕▓р╕ор╕нр╕в! р╕Др╕░р╣Бр╕Щр╕Щр╕Вр╕нр╕Зр╣Ар╕Ир╣Йр╕▓р╕Хр╕нр╕Щр╕Щр╕╡р╣Йр╕Др╕╖р╕н ${userContext?.points || 0} р╕Др╕░р╣Бр╕Щр╕Щ р╕вр╕▒р╕Зр╕Вр╕▓р╕Фр╕нр╕╡р╕Б ${(userContext?.pointsRequired || 300) - (userContext?.points || 0)} р╣Ар╕Юр╕╖р╣Ир╕нр╕лр╕бр╕╕р╕Щр╕зр╕Зр╕ер╣Йр╕н! р╕кр╕╣р╣Йр╣Жр╕Щр╕░! ЁЯТктЪУ ЁЯУК (р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ър╕Вр╕нр╕Зр╕Вр╣Йр╕▓)"

р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Чр╕╡р╣И 2 (р╕Цр╕▓р╕бр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕Зр╕▓р╕Щ):
User: "р╕бр╕╡р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╣Др╕лр╕Щр╕Ър╣Йр╕▓р╕З"
AI: "р╣Ар╕нр╕н! р╕бр╕╡р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф 4 р╣Бр╕лр╣Ир╕З: ЁЯПЛя╕П Gymnasium 4, ЁЯПл р╕Хр╕╢р╕Бр╣Вр╕Фр╕б, ЁЯОи р╕лр╕нр╕ир╕┤р╕ер╕Ыр╣М, ЁЯОн р╕лр╣Йр╕нр╕Зр╣Бр╕кр╕Фр╕З р╣Ар╕Ир╣Йр╕▓р╕Хр╣Йр╕нр╕Зр╣Ар╕Кр╣Зр╕Бр╕нр╕┤р╕Щр╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 3 р╕Чр╕╡р╣Ир╕Щр╕░! ЁЯЧ║я╕П ЁЯУК (р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ър╕Вр╕нр╕Зр╕Вр╣Йр╕▓)"

р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Чр╕╡р╣И 3 (р╕Цр╕▓р╕бр╕Др╕░р╣Бр╕Щр╕Щ):
User: "р╣Др╕Фр╣Йр╕Др╕░р╣Бр╕Щр╕Щр╕вр╕▒р╕Зр╣Др╕З"
AI: "р╕лр╕▓р╕Др╕░р╣Бр╕Щр╕Щр╕Зр╣Ир╕▓р╕вр╕Щр╕┤р╕Фр╣Ар╕Фр╕╡р╕вр╕з! р╣Ар╕Юр╕╡р╕вр╕Зр╕Чр╕│р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕бр╕вр╣Ир╕нр╕вр╣Гр╕Щр╣Бр╕Хр╣Ир╕ер╕░р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣Ир╕Ир╕░р╣Др╕Фр╣Й +100 р╕Др╕░р╣Бр╕Щр╕Щр╕Чр╕▒р╕Щр╕Чр╕╡! р╕Чр╕│ 3 р╕Бр╕┤р╕Ир╕Бр╕гр╕гр╕б = 300 р╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕ер╕в! ЁЯТпЁЯОп ЁЯУК (р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ър╕Вр╕нр╕Зр╕Вр╣Йр╕▓)"

р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Чр╕╡р╣И 4 (р╕Цр╕▓р╕бр╕Чр╕▒р╣Ир╕зр╣Др╕Ы):
User: "р╕Др╕Ур╕░р╕ир╕┤р╕ер╕Ыр╣Мр╕бр╕╡р╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕гр╕нр╕░р╣Др╕гр╕Ър╣Йр╕▓р╕З"
AI: "р╕Др╕Ур╕░р╕ир╕┤р╕ер╕Ыр╣Мр╕бр╕Ш.р╕бр╕╡ 4 р╕кр╕▓р╕Вр╕▓р╕лр╕ер╕▒р╕Б: р╕Чр╕▒р╕ир╕Щр╕ир╕┤р╕ер╕Ыр╣М, р╕Фр╕Щр╕Хр╕гр╕╡, р╕Бр╕▓р╕гр╕нр╕нр╕Бр╣Бр╕Ър╕Ъ, р╕ир╕┤р╕ер╕Ыр╕░р╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕З р╕бр╕╡р╕Др╕гр╕Ър╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕ир╕┤р╕ер╕Ыр╕░р╣Ар╕ер╕в! ЁЯОиЁЯО╡ ЁЯУК (р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ър╕Вр╕нр╕Зр╕Вр╣Йр╕▓)"

р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Чр╕╡р╣И 5 (р╕Др╕┤р╕Фр╣Ар╕нр╕З):
User: "р╣Ар╕гр╕╡р╕вр╕Щр╕ир╕┤р╕ер╕Ыр╣Мр╕лр╕▓р╕Зр╕▓р╕Щр╕Чр╕│р╕вр╕▓р╕Бр╣Др╕лр╕б"
AI: "р╣Гр╕Щр╕вр╕╕р╕Др╕Щр╕╡р╣Йр╕ир╕┤р╕ер╕Ыр╕┤р╕Щр╕бр╕╡р╣Вр╕нр╕Бр╕▓р╕кр╣Ар╕вр╕нр╕░р╕бр╕▓р╕Б! р╕Чр╕▒р╣Йр╕З Designer, Content Creator, Artist р╕Хр╣Ир╕▓р╕Зр╣Ж р╣Бр╕Хр╣Ир╕Хр╣Йр╕нр╕Зр╕Вр╕вр╕▒р╕Щр╕Эр╕╢р╕Бр╕Эр╕Щр╕Щр╕░! ЁЯТктЬи ЁЯТн (р╕Вр╣Йр╕▓р╕Др╕┤р╕Фр╣Ар╕нр╕З р╕нр╕▓р╕Ир╣Др╕бр╣Ир╕Цр╕╣р╕Б100% р╕ер╕нр╕Зр╕Цр╕▓р╕бр╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╕нр╕╡р╕Бр╕Чр╕╡р╕Щр╕░!)"

р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Чр╕╡р╣И 6 (р╣Др╕бр╣Ир╕гр╕╣р╣Й):
User: "р╕Др╣Ир╕▓р╣Ар╕Чр╕нр╕бр╣Ар╕Чр╣Ир╕▓р╣Др╕лр╕гр╣И"
AI: "р╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕Др╣Ир╕▓р╣Ар╕Чр╕нр╕бр╕Вр╣Йр╕▓р╣Др╕бр╣Ир╣Бр╕Щр╣Ир╣Гр╕И р╕ер╕нр╕Зр╕Цр╕▓р╕бр╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╕Ыр╕гр╕░р╕Ир╕│р╕Чр╣Ир╕▓р╣Ар╕гр╕╖р╕нр╕лр╕гр╕╖р╕нр╣Ар╕Кр╣Зр╕Бр╣Ар╕зр╣Зр╕Ър╣Др╕Лр╕Хр╣Мр╕бр╕Ш.р╕Фр╕╣р╕Щр╕░ р╣Ар╕Юр╕╖р╣Ир╕нр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╣Бр╕бр╣Ир╕Щр╕вр╕│! ЁЯП┤тАНтШая╕П"

тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР

р╣Ар╕нр╕▓р╕ер╣Ир╕░! р╕Вр╣Йр╕▓р╕Юр╕гр╣Йр╕нр╕бр╕Хр╕нр╕Ър╕Др╕│р╕Цр╕▓р╕бр╕Вр╕нр╕Зр╣Ар╕Ир╣Йр╕▓р╣Бр╕ер╣Йр╕з! р╕нр╕▓р╕ор╕нр╕в! ЁЯП┤тАНтШая╕ПтЪУ`;
};

// Chat with pirate using Google Gemini AI with enhanced intelligence
export const chatWithPirate = async (
  userMessage: string,
  userContext?: UserContext
): Promise<string> => {

  // Check cache first to reduce API calls
  const cacheKey = `${userMessage}-${JSON.stringify(userContext || {})}`;
  const cached = requestCache.get(cacheKey);
  if (cached && Date.now() - cached.timestamp < CACHE_TTL) {
    console.log('[Gemini AI] тЬЕ Using cached response');
    return cached.response;
  }

  const settings = await getGeminiSettings();
  
  // Get API keys (support both array and single key for backward compatibility)
  let apiKeys: string[] = [];
  if (settings?.geminiApiKeys && Array.isArray(settings.geminiApiKeys)) {
    apiKeys = settings.geminiApiKeys.filter(key => key.trim());
  }
  
  // If no valid keys found, throw error (don't use placeholder)
  if (apiKeys.length === 0) {
    console.error('[Gemini AI] No API keys configured!');
    throw new Error("тЭМ р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡р╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓ API Key\n\nр╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕Ьр╕╣р╣Йр╕Фр╕╣р╣Бр╕ер╕гр╕░р╕Ър╕Ър╣Гр╕лр╣Йр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╣Гр╕Щ Admin Dashboard тЖТ р╣Бр╕Чр╣Зр╕Ъ \"р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓ AI Chatbot\"");
  }
  
  console.log(`[Gemini AI] Found ${apiKeys.length} API key(s) to try`);

  // Build comprehensive prompt
  const systemPrompt = getSystemPrompt(settings, userContext);
  const fullPrompt = `${systemPrompt}\n\nтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР\nЁЯТм р╕Др╕│р╕Цр╕▓р╕бр╕Ир╕▓р╕Б User:\nтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР\n\n${userMessage}\n\nтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР\nЁЯУЭ р╕Др╕│р╕Хр╕нр╕Ър╕Вр╕нр╕Зр╕Вр╣Йр╕▓ (р╕Хр╕▓р╕бр╕Бр╕Ор╕Вр╣Йр╕▓р╕Зр╕Хр╣Йр╕Щ):`;
  
  console.log('[Gemini AI] Sending request with', apiKeys.length, 'fallback keys...');
  
  // Try each API key until one succeeds
  let lastError: Error | null = null;
  
  for (let i = 0; i < apiKeys.length; i++) {
    const apiKey = apiKeys[i];
    const keyPreview = `${apiKey.substring(0, 10)}...${apiKey.substring(apiKey.length - 4)}`;
    console.log(`[Gemini AI] Trying key ${i + 1}/${apiKeys.length} (${keyPreview})...`);
    
    try {
      const timeoutDuration = 60000; // 60s timeout
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), timeoutDuration);
      
      console.log(`[Gemini AI] Timeout set to ${timeoutDuration}ms`);
      
      // Call Google Gemini Direct API with enhanced model
      const model = 'gemini-2.0-flash-exp'; // Latest experimental model - faster and smarter
      const url = `https://generativelanguage.googleapis.com/v1beta/models/${model}:generateContent?key=${apiKey}`;
      
      const response = await fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          contents: [{
            parts: [{
              text: fullPrompt
            }]
          }],
          generationConfig: {
            temperature: 0.9, // Creative but controlled
            topP: 0.95,
            topK: 40,
            maxOutputTokens: 800, // Increased for more detailed answers
            candidateCount: 1,
          },
          safetySettings: [
            { category: "HARM_CATEGORY_HARASSMENT", threshold: "BLOCK_NONE" },
            { category: "HARM_CATEGORY_HATE_SPEECH", threshold: "BLOCK_NONE" },
            { category: "HARM_CATEGORY_SEXUALLY_EXPLICIT", threshold: "BLOCK_NONE" },
            { category: "HARM_CATEGORY_DANGEROUS_CONTENT", threshold: "BLOCK_NONE" }
          ]
        }),
        signal: controller.signal,
      });

      clearTimeout(timeoutId);

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        
        console.error(`[Gemini AI] тЭМ Key ${i + 1} failed:`, {
          status: response.status,
          statusText: response.statusText,
          error: errorData,
          keyPreview
        });
        
        // If rate limit or quota, try next key
        if (response.status === 429 || response.status === 402) {
          console.warn(`[Gemini AI] ЁЯЪл Key ${i + 1} (${keyPreview}): Rate limit/quota exceeded`);
          const errorMsg = errorData?.error?.message || 'Quota exceeded';
          lastError = new Error(`Key ${i + 1}: ${errorMsg}`);
          continue; // Try next key
        }
        
        if (response.status === 401 || response.status === 403) {
          console.warn(`[Gemini AI] ЁЯФС Key ${i + 1} (${keyPreview}): Invalid/unauthorized`);
          lastError = new Error(`Key ${i + 1}: Invalid API key`);
          continue; // Try next key
        }
        
        // For other errors, try next key too
        console.warn(`[Gemini AI] тЪая╕П Key ${i + 1} (${keyPreview}): Error ${response.status}`);
        lastError = new Error(`Key ${i + 1}: HTTP ${response.status} - ${errorData?.error?.message || response.statusText}`);
        continue;
      }

      const data = await response.json();
      console.log(`[Gemini AI] тЬЕ Success with key ${i + 1}!`);

      const aiResponse = data.candidates?.[0]?.content?.parts?.[0]?.text;
      if (!aiResponse) {
        console.error('[Gemini AI] Invalid response format:', data);
        throw new Error("р╣Др╕бр╣Ир╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Др╕│р╕Хр╕нр╕Ър╕Ир╕▓р╕Б AI");
      }

      // Cache the response
      requestCache.set(cacheKey, { response: aiResponse, timestamp: Date.now() });
      
      console.log(`[Gemini AI] Response cached. Cache size: ${requestCache.size}`);
      
      return aiResponse; // Success!
      
    } catch (error: any) {
      console.error(`[Gemini AI] Error with key ${i + 1}:`, error);
      lastError = error;
      
      // If timeout or network error, try next key
      if (error.name === 'AbortError' || error.message?.includes('Failed to fetch')) {
        console.warn(`[Gemini AI] Network/timeout error with key ${i + 1}, trying next key...`);
        continue; // Try next key
      }
      
      // If it's not a retryable error, continue to next key anyway
      continue;
    }
  }
  
  // All keys failed
  console.error('[Gemini AI] тЭМ ALL KEYS FAILED!');
  console.error('[Gemini AI] Last error:', lastError);
  console.error('[Gemini AI] Total keys tried:', apiKeys.length);
  
  // Better error messages based on last error
  if (lastError?.name === 'AbortError') {
    throw new Error("тП▒я╕П р╕Вр╣Йр╕▓р╕Др╕┤р╕Фр╕Щр╕▓р╕Щр╣Ар╕Бр╕┤р╕Щр╣Др╕Ы! р╕ер╕нр╕Зр╕Цр╕▓р╕бр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕Зр╕Щр╕░ (р╕лр╕гр╕╖р╕нр╕ер╕нр╕Зр╕Чр╕│р╕Др╕│р╕Цр╕▓р╕бр╕кр╕▒р╣Йр╕Щр╕ер╕Зр╕Фр╕╣)");
  } else if (lastError?.message?.includes('Failed to fetch') || lastError?.message?.includes('network')) {
    throw new Error("ЁЯМР р╕Вр╣Йр╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣Мр╣Др╕бр╣Ир╣Др╕Фр╣Й\n\nр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕нр╕┤р╕Щр╣Ар╕Чр╕нр╕гр╣Мр╣Ар╕Щр╣Зр╕Хр╕Вр╕нр╕Зр╣Ар╕Ир╣Йр╕▓р╕Фр╕╣р╕Щр╕░!");
  } else if (lastError?.message?.includes('Quota exceeded') || lastError?.message?.includes('quota') || lastError?.message?.includes('429')) {
    throw new Error(`ЁЯЪл API Keys р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф (${apiKeys.length} keys) р╕лр╕бр╕Ф quota р╣Бр╕ер╣Йр╕з!\n\nЁЯТб р╕зр╕┤р╕Шр╕╡р╣Бр╕Бр╣Й:\n- р╕гр╕нр╕кр╕▒р╕Бр╕Др╕гр╕╣р╣Ир╣Бр╕ер╣Йр╕зр╕ер╕нр╕Зр╣Гр╕лр╕бр╣И (quota р╕Ир╕░р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕Чр╕╕р╕Бр╕Щр╕▓р╕Чр╕╡)\n- р╕лр╕гр╕╖р╕нр╕Хр╕┤р╕Фр╕Хр╣Ир╕н Admin р╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕Юр╕┤р╣Ир╕б API key р╣Гр╕лр╕бр╣И\n\n(р╕Фр╕╣ Console р╕кр╕│р╕лр╕гр╕▒р╕Ър╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф)`);
  } else if (lastError?.message?.includes('Invalid') || lastError?.message?.includes('401') || lastError?.message?.includes('403')) {
    throw new Error(`ЁЯФС API Keys р╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╕лр╕гр╕╖р╕нр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕!\n\nр╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕н Admin р╣Ар╕Юр╕╖р╣Ир╕нр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╣Гр╕Щ Admin Dashboard\n\n(р╕Фр╕╣ Console р╕кр╕│р╕лр╕гр╕▒р╕Ър╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф)`);
  } else {
    throw new Error(`тЭМ р╕Вр╣Йр╕▓р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Хр╕нр╕Ър╣Др╕Фр╣Йр╣Гр╕Щр╕Вр╕Ур╕░р╕Щр╕╡р╣Й! (р╕ер╕нр╕З ${apiKeys.length} keys р╣Бр╕ер╣Йр╕з)\n\nЁЯТб р╕Бр╕гр╕╕р╕Ур╕▓р╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З р╕лр╕гр╕╖р╕нр╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕Хр╕┤р╕Фр╕Хр╣Ир╕н Admin\n\n(р╕Фр╕╣ Console р╕кр╕│р╕лр╕гр╕▒р╕Ър╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф)`);
  }
};
